[{"/home/msamia/code/FlowFive/src/index.js":"1","/home/msamia/code/FlowFive/src/serviceWorker.js":"2","/home/msamia/code/FlowFive/src/pages/App/App.js":"3","/home/msamia/code/FlowFive/src/pages/SignupPage/SignupPage.jsx":"4","/home/msamia/code/FlowFive/src/pages/LoginPage/LoginPage.jsx":"5","/home/msamia/code/FlowFive/src/hooks/useForm.js":"6","/home/msamia/code/FlowFive/src/utils/userService.js":"7","/home/msamia/code/FlowFive/src/components/ErrorMessage/ErrorMessage.jsx":"8","/home/msamia/code/FlowFive/src/utils/tokenService.js":"9","/home/msamia/code/FlowFive/src/components/TitleDiv/TitleDiv.jsx":"10","/home/msamia/code/FlowFive/src/panels/ActiveRound/ActiveRound.jsx":"11","/home/msamia/code/FlowFive/src/pages/FlowFivePage/FlowFivePage.jsx":"12","/home/msamia/code/FlowFive/src/panels/Main/Main.jsx":"13","/home/msamia/code/FlowFive/src/panels/MakeInvitation/MakeInvitation.jsx":"14","/home/msamia/code/FlowFive/src/panels/MySettings/MySettings.jsx":"15","/home/msamia/code/FlowFive/src/panels/RightHome/RightHome.jsx":"16","/home/msamia/code/FlowFive/src/panels/Password/Password.jsx":"17","/home/msamia/code/FlowFive/src/panels/Practice/Practice.jsx":"18","/home/msamia/code/FlowFive/src/panels/RoundWait/RoundWait.jsx":"19","/home/msamia/code/FlowFive/src/panels/SetActive/SetActive.jsx":"20","/home/msamia/code/FlowFive/src/panels/ShowRules/ShowRules.jsx":"21","/home/msamia/code/FlowFive/src/panels/Signup/Signup.jsx":"22","/home/msamia/code/FlowFive/src/panels/ViewInvitation/ViewInvitation.jsx":"23","/home/msamia/code/FlowFive/src/pages/FlowFivePage/ErrorBoundary.jsx":"24","/home/msamia/code/FlowFive/src/pages/TempPage/TempPage.jsx":"25","/home/msamia/code/FlowFive/src/panels/Intro/Intro.jsx":"26","/home/msamia/code/FlowFive/src/pages/TempPage/ErrorBoundary.jsx":"27","/home/msamia/code/FlowFive/src/components/LabelDiv/LabelDiv.jsx":"28","/home/msamia/code/FlowFive/src/components/InviteBar/InviteBar.jsx":"29","/home/msamia/code/FlowFive/src/components/GuestBar/GuestBar.jsx":"30","/home/msamia/code/FlowFive/src/components/WaitingPlayer/WaitingPlayer.jsx":"31","/home/msamia/code/FlowFive/src/components/TimerBar/TimerBar.jsx":"32","/home/msamia/code/FlowFive/src/components/WaitingPlayer/AnimSpan.jsx":"33","/home/msamia/code/FlowFive/src/components/TimerBar/Bar.jsx":"34","/home/msamia/code/FlowFive/src/components/CheckBox/CheckBox.jsx":"35","/home/msamia/code/FlowFive/src/components/PieceDotted/PieceDotted.jsx":"36","/home/msamia/code/FlowFive/src/components/GameCell/GameCell.jsx":"37","/home/msamia/code/FlowFive/src/panels/Play/Play.jsx":"38","/home/msamia/code/FlowFive/src/components/GameBoard/GameBoard.jsx":"39","/home/msamia/code/FlowFive/src/utils/gameEngine.js":"40"},{"size":543,"mtime":1610734430905,"results":"41","hashOfConfig":"42"},{"size":5086,"mtime":1610734431030,"results":"43","hashOfConfig":"42"},{"size":1537,"mtime":1611596982648,"results":"44","hashOfConfig":"42"},{"size":3122,"mtime":1611711840319,"results":"45","hashOfConfig":"42"},{"size":2249,"mtime":1611712205289,"results":"46","hashOfConfig":"42"},{"size":312,"mtime":1610734430901,"results":"47","hashOfConfig":"42"},{"size":1922,"mtime":1611442326572,"results":"48","hashOfConfig":"42"},{"size":132,"mtime":1610734430898,"results":"49","hashOfConfig":"42"},{"size":1119,"mtime":1611445623000,"results":"50","hashOfConfig":"42"},{"size":568,"mtime":1611721141035,"results":"51","hashOfConfig":"42"},{"size":1809,"mtime":1611871845991,"results":"52","hashOfConfig":"42"},{"size":3705,"mtime":1611871250355,"results":"53","hashOfConfig":"42"},{"size":2133,"mtime":1611871802459,"results":"54","hashOfConfig":"42"},{"size":2030,"mtime":1611871537358,"results":"55","hashOfConfig":"42"},{"size":1199,"mtime":1611720142030,"results":"56","hashOfConfig":"42"},{"size":637,"mtime":1611871177633,"results":"57","hashOfConfig":"42"},{"size":306,"mtime":1611719853793,"results":"58","hashOfConfig":"42"},{"size":1811,"mtime":1611871308062,"results":"59","hashOfConfig":"42"},{"size":307,"mtime":1611719766304,"results":"60","hashOfConfig":"42"},{"size":307,"mtime":1611719754151,"results":"61","hashOfConfig":"42"},{"size":603,"mtime":1611517751350,"results":"62","hashOfConfig":"42"},{"size":304,"mtime":1611719728578,"results":"63","hashOfConfig":"42"},{"size":308,"mtime":1611719681535,"results":"64","hashOfConfig":"42"},{"size":694,"mtime":1611178306717,"results":"65","hashOfConfig":"42"},{"size":914,"mtime":1611715859591,"results":"66","hashOfConfig":"42"},{"size":2120,"mtime":1611720404786,"results":"67","hashOfConfig":"42"},{"size":694,"mtime":1611208368474,"results":"68","hashOfConfig":"42"},{"size":582,"mtime":1611512779196,"results":"69","hashOfConfig":"42"},{"size":876,"mtime":1611719280329,"results":"70","hashOfConfig":"42"},{"size":751,"mtime":1611718872515,"results":"71","hashOfConfig":"42"},{"size":612,"mtime":1611721080281,"results":"72","hashOfConfig":"42"},{"size":1386,"mtime":1611719520874,"results":"73","hashOfConfig":"42"},{"size":721,"mtime":1611379845373,"results":"74","hashOfConfig":"42"},{"size":566,"mtime":1611719355100,"results":"75","hashOfConfig":"42"},{"size":473,"mtime":1611718927598,"results":"76","hashOfConfig":"42"},{"size":683,"mtime":1611719311524,"results":"77","hashOfConfig":"42"},{"size":1155,"mtime":1611719226179,"results":"78","hashOfConfig":"42"},{"size":1657,"mtime":1611727256587,"results":"79","hashOfConfig":"42"},{"size":2552,"mtime":1611719178682,"results":"80","hashOfConfig":"42"},{"size":5371,"mtime":1611721408253,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"aab6m7",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},"/home/msamia/code/FlowFive/src/index.js",[],["176","177"],"/home/msamia/code/FlowFive/src/serviceWorker.js",[],"/home/msamia/code/FlowFive/src/pages/App/App.js",["178"],"import React, {useState} from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport FlowFivePage from '../FlowFivePage/FlowFivePage';\nimport TempPage from '../TempPage/TempPage'\nimport userService from '../../utils/userService'\n\nfunction App() {\n\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\n  }\n//-----------------------------------------\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null})\n  }\n//-----------------------------------------\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          {userService.getUser() ? \n              <FlowFivePage user={user} handleLogout={handleLogout}/>\n            :\n            <TempPage />\n          }\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","/home/msamia/code/FlowFive/src/pages/SignupPage/SignupPage.jsx",["179"],"import React, {useState, useRef, useEffect } from 'react';\nimport './SignupPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { useForm } from '../../hooks/useForm';\nimport userService from '../../utils/userService';\nimport TitleDiv from '../../components/TitleDiv/TitleDiv';\n\nexport default function SignUpPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('');\n    const [state, handleChange]       = useForm({\n        username: '',\n        email: '',\n        password: '',\n        passwordConf: ''    \n    });\n   \n\n    const formRef = useRef();\n\n    useEffect(() => {\n      formRef.current.checkValidity() ? setValidForm(false) : setValidForm(true);\n    });\n\n\n\n    return (\n\n        <TitleDiv title=\"SIGN UP\" width= \"350px\" >\n\n          <form  autoComplete=\"off\" ref={formRef} onSubmit={async (e) => {\n            e.preventDefault()\n            console.log(state, ' this is state')\n            try {\n                await userService.signup(state);\n                // Route to wherever you want!\n               // alert(\"You're logged in! Time to Code where you want to go Now! ~ SignupComponent\")\n               \n               console.log( 'USER CREATED :', state);\n              } catch (err) {\n                // Invalid user data (probably duplicate email)\n                console.log(err.message)\n                setError(err.message)\n              }\n          }}>\n            {/* <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"username\"\n                placeholder=\"username\"\n                value={state.username}\n                onChange={handleChange}\n                required\n              />\n            </div> */}\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={ state.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={ state.password}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"passwordConf\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={ state.passwordConf}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn\"\n              disabled={invalidForm}\n            >\n              Signup\n            </button>\n          </form>\n\n          {error ? <ErrorMessage error={error} /> : null}\n  </TitleDiv>\n\n      );\n}\n","/home/msamia/code/FlowFive/src/pages/LoginPage/LoginPage.jsx",["180","181"],"import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport userService from '../../utils/userService';\nimport TitleDiv from '../../components/TitleDiv/TitleDiv';\n\nexport default function LoginPage(props){\n\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('');\n    const [state, setState]       = useState({\n        email: '',\n        pw: '',\n    });\n  \n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    }\n   \n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin() // \n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n         <br />\n        <TitleDiv title=\"LOGIN\" width= \"350px\" >\n \n          <form  autoComplete=\"off\" onSubmit={handleSubmit} >\n          <br />\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={ state.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                name=\"pw\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={ state.password}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <br />\n            <button\n              type=\"submit\"\n              disabled={invalidForm}\n            >\n              Login\n            </button>\n            <br /><br />\n          </form>\n\n          {error ? <ErrorMessage error={error} /> : null}\n          </TitleDiv>\n        </>\n      );\n}\n\n","/home/msamia/code/FlowFive/src/hooks/useForm.js",[],"/home/msamia/code/FlowFive/src/utils/userService.js",["182"],"import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n//----------------------------\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n//----------------------------------------\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n//-----------------------------------------\nfunction logout() {\n  tokenService.removeToken();\n}\n//-----------------------------------------\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('userService--> Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n//---------------------------------------\nfunction checkEmail(email) {\n  console.log(\"MSK HIT userService.checkEmail : \", email);\n  return fetch(BASE_URL + 'checkEmail', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(email)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    console.log(\"MSK from userService POST: \", res);\n    if (res.ok) \n        return res.json();\n\n    throw new Error('Bad Email!');\n  })\n  .then((email) => {console.log(\"THIS EMAIL ***** \",email)});\n}\n//----------------------------------------\nexport default {\n  signup, \n  getUser,\n  logout,\n  login,\n  checkEmail,\n};","/home/msamia/code/FlowFive/src/components/ErrorMessage/ErrorMessage.jsx",[],"/home/msamia/code/FlowFive/src/utils/tokenService.js",["183"],"function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  //----------------------------------------------\n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  //----------------------------------------------\n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  //-----------------------------------------------\n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  //-----------------------------------------------\n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","/home/msamia/code/FlowFive/src/components/TitleDiv/TitleDiv.jsx",[],"/home/msamia/code/FlowFive/src/panels/ActiveRound/ActiveRound.jsx",["184"],"/home/msamia/code/FlowFive/src/pages/FlowFivePage/FlowFivePage.jsx",[],"/home/msamia/code/FlowFive/src/panels/Main/Main.jsx",[],"/home/msamia/code/FlowFive/src/panels/MakeInvitation/MakeInvitation.jsx",[],"/home/msamia/code/FlowFive/src/panels/MySettings/MySettings.jsx",[],"/home/msamia/code/FlowFive/src/panels/RightHome/RightHome.jsx",[],"/home/msamia/code/FlowFive/src/panels/Password/Password.jsx",[],"/home/msamia/code/FlowFive/src/panels/Practice/Practice.jsx",[],"/home/msamia/code/FlowFive/src/panels/RoundWait/RoundWait.jsx",[],"/home/msamia/code/FlowFive/src/panels/SetActive/SetActive.jsx",[],"/home/msamia/code/FlowFive/src/panels/ShowRules/ShowRules.jsx",[],"/home/msamia/code/FlowFive/src/panels/Signup/Signup.jsx",[],"/home/msamia/code/FlowFive/src/panels/ViewInvitation/ViewInvitation.jsx",[],"/home/msamia/code/FlowFive/src/pages/FlowFivePage/ErrorBoundary.jsx",[],["185","186"],"/home/msamia/code/FlowFive/src/pages/TempPage/TempPage.jsx",["187"],"/*---------------------------------\nCustom react component.\n Component name: \n Description: Temporary page for login/signup process develope.\n                This page is alternative to FlowFivePage\n Props:\nDevelopped by: Mehrdad Samia - 2021\n----------------------------------*/\nimport React from 'react';\n\nimport Intro from \"../../panels/Intro/Intro\";\nimport '../FlowFivePage/FlowFivePage.css';\nimport RightHome from '../../panels/RightHome/RightHome';\n\nexport default function TempPage(props){\n    return(\n        <>\n                <div className=\"app-container\">\n                    <div className = \"app-half left-panel\" > <Intro /> </div>\n                    <div className = \"app-half right-panel\" > \n                    <br/><button>GAME RULES</button>\n                    <br/><br/>\n                    <button>PRACTICE</button> \n\n                    </div>\n\n                </div>\n\n        </>\n    );\n};","/home/msamia/code/FlowFive/src/panels/Intro/Intro.jsx",["188","189","190"],"/*---------------------------------\nCustom react component.\n Component name: \n Description:\n Props:\nDevelopped by: Mehrdad Samia - 2021\n----------------------------------*/\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Intro.css';\nimport { useForm } from '../../hooks/useForm';\nimport userService from '../../utils/userService';\n\nexport default function Intro(props){\n\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ]          = useState('');\n    const [state, handleChange]       = useForm({\n        email: '',\n    });\n  \n    const formRef = useRef();\n\n    useEffect(() => {\n      formRef.current.checkValidity() ? setValidForm(false) : setValidForm(true);\n    });\n\n\n    return(\n        <div id=\"back\">\n            <img id=\"hb-logo\" src=\"HB-small1.jpg\" alt=\"HB Intro\" />\n            <p id=\"welcome\">As a guest user, you can start playing right now, \n            but if you don't sign in, it is impossible to calculate your ranking \n            and points. Also if sign in, you can have your own private play room \n            and invite your friends to join and play. It is so simple, just enter \n            your email and hit \"Sign in\"</p>\n\n            <form  autoComplete=\"off\" ref={formRef} onSubmit={async (e) => {\n            e.preventDefault()\n            \n            try {\n                console.log(\"MSK email check try -->\", state);\n                await userService.checkEmail(state);\n                \n              } catch (err) {\n                // Invalid user data (probably duplicate email)\n                setError(err.message)\n              }\n          }}>\n\n                <label>Email:  \n                    <input \n                        type=\"email\" \n                        name=\"email\" \n                        value={ state.email}\n                        onChange={handleChange}\n                        required\n                    />\n                </label><br/>\n                <button type=\"submit\" className=\"green\">SIGN IN</button>\n                <button >PLAY RANDOM</button>\n            </form>\n        </div>\n    );\n};","/home/msamia/code/FlowFive/src/pages/TempPage/ErrorBoundary.jsx",[],"/home/msamia/code/FlowFive/src/components/LabelDiv/LabelDiv.jsx",[],"/home/msamia/code/FlowFive/src/components/InviteBar/InviteBar.jsx",[],"/home/msamia/code/FlowFive/src/components/GuestBar/GuestBar.jsx",[],"/home/msamia/code/FlowFive/src/components/WaitingPlayer/WaitingPlayer.jsx",[],"/home/msamia/code/FlowFive/src/components/TimerBar/TimerBar.jsx",["191"],"/*---------------------------------\nCustom react component.\n Component name: \n Description:\n Props: [img] , message\nDevelopped by: Mehrdad Samia - 2021\n----------------------------------*/\n\nimport React, { useState, useEffect } from 'react';\nimport './TimerBar.css';\nimport Bar from './Bar'\n\nexport default function TimerBar(props){\n\nlet helper = (props.time * 10);\nconst FULLLENGTH = 260; // px\nconst TSTEP = FULLLENGTH / (helper);\n\nconst [len, setLen] = useState( FULLLENGTH );\nconst [time, setTime] = useState(helper);\n\nuseEffect( () => {\n\n    const interval = setInterval ( () => {\n    setTime( time => time - 1 );\n    setLen( len => len - TSTEP );\n    helper--;\n    if( helper <= 0 )\n    {\n        clearInterval ( interval );\n        props.onTimeOut(); // lift up state to Active\n    }\n }, 100);\n\n}, []);\n\n    return(\n        <>\n         { props.user?\n             (\n                <div className=\"TimerBar-main\">\n                    <img className='TimerBar-image' src={props.user.avatar} alt='User' />\n                    <p className=\"TimerBar-text\">\n                        {\n                            time >= 0 ?\n                            ( time /10 ).toFixed(1)\n                            : 'Wait...'\n                        } \n                    </p>\n                    <Bar width={len} />\n                </div>\n             ) : null\n         }\n        </>\n    );\n}","/home/msamia/code/FlowFive/src/components/WaitingPlayer/AnimSpan.jsx",["192"],"/*---------------------------------\nCustom react component.\n Component name: \n Description:\n Props: [img] , message\nDevelopped by: Mehrdad Samia - 2021\n----------------------------------*/\n\nimport React, { useState, useEffect } from 'react';\n\nexport default function AnimSpan(props){\n\n    let index = 0;\n    let chat = props.text;\n\n    const [msg, setMsg] = useState('');\n\n    useEffect(() => \n    {\n        setMsg( '' );\n        index = 0;\n\n        const interval = setInterval( () => \n        {\n            index < chat.length ?\n                setMsg( msg => msg + chat.charAt( index++ )): clearInterval(interval);\n        }, 70);\n    }, [chat]);\n\n    return( <span className=\"WaitingPlayer-chat\"> {msg} </span> );\n};","/home/msamia/code/FlowFive/src/components/TimerBar/Bar.jsx",[],"/home/msamia/code/FlowFive/src/components/CheckBox/CheckBox.jsx",[],"/home/msamia/code/FlowFive/src/components/PieceDotted/PieceDotted.jsx",[],"/home/msamia/code/FlowFive/src/components/GameCell/GameCell.jsx",[],"/home/msamia/code/FlowFive/src/panels/Play/Play.jsx",["193","194"],"/*---------------------------------\nCustom react component.\n Component name: \n Description:\n Props:\nDevelopped by: Mehrdad Samia - 2021\n----------------------------------*/\n\nimport React, { useState, } from 'react';\nimport GameBoard from '../../components/GameBoard/GameBoard';\nimport gameEngine from '../../utils/gameEngine.js';\nimport './Play.css';\n\nexport default function Practice(props){\n\n//let newBoard = gameEngine.getShuffledBoard().slice() ; //TODO DEBUG, cause re-shuffle\nlet newBoard = [2,0,0,0 ,0,1,0,3 ,4,0,0,0 ,0,0,5,0];\nlet winnerCells = [];\nlet activePiece = 1;\nconst [board, setBoard] = useState( newBoard );\nconst [active, setActive] = useState( activePiece );\nconst [win, setWin ] = useState([]);\n\n//-------------------------------------------\nfunction shuffle()\n{\n    newBoard = gameEngine.getShuffledBoard().slice();\n    setBoard( newBoard );\n    setActive( gameEngine.getActivePiece() ); \n    setWin([]);\n}\n//-------------------------------------------\nfunction pieceMovedTo( cellNo )\n{   \n    if(isNaN(win[0]))\n    {\n        newBoard = gameEngine.makeMove( cellNo );\n        activePiece = gameEngine.getActivePiece();\n        winnerCells = gameEngine.checkWin();\n  \n        setBoard( [...newBoard ] );\n        setWin( [...winnerCells] );\n        setActive( activePiece ); \n    }\n}\n//-------------------------------------------\nfunction close(){\n    props.showPage(\"RightHome\");\n}\n//-------------------------------------------\n\n    return (\n    <>\n\n        <GameBoard  board={board} \n                    activePiece={active} \n                    pieceMovedTo={pieceMovedTo} \n                    winners={win}       />\n    </>\n    );\n};","/home/msamia/code/FlowFive/src/components/GameBoard/GameBoard.jsx",["195"],"/*---------------------------------\nCustom react component.\n Component name: \n Description:\n Props:\nDevelopped by: Mehrdad Samia - 2021\n----------------------------------*/\n\nimport React, { useState, useEffect } from 'react';\nimport GameCell from '../GameCell/GameCell';\nimport gameEngine from '../../utils/gameEngine.js';\nimport './GameBoard.css';\n\n           \n    //--------------------                    \nexport default function GameBoard(props){\n\n    let cells = [];\n    let highlights = [];\n    const [gameCells, setGameCells] = useState(cells);\n    let selected = 0;\n\nuseEffect( () => \n    {\n        makeCells();\n        setGameCells( [...cells] ); //MSK : Trick to trigg react render for arrays\n\n    }, [props.board]);\n//-----------------------------------------\n    function makeCells ()\n    {\n        if ( !isNaN(props.winners[0]) )\n        {\n            for( let i=0; i < 16; i++)\n            {\n                cells[i] = (<GameCell   key={i} \n                                        id={i} \n                                        piece={props.board[ i ]}\n                                        cellClick={ cellClick } \n                                        winner={props.winners.indexOf(i) >= 0? \"true\" : null }\n                                        />)\n            }\n        }\n        else\n            for( let i=0; i < 16; i++)\n            {\n                cells[i] = (<GameCell   key={i} \n                                        id={i} \n                                        piece={props.board[ i ]}\n                                        cellClick={ cellClick } \n                                        highlight={highlights[ i ]}\n                                        selected={selected === i ? \"true\" : null}\n                                        />)\n            }\n    }\n//-----------------------------------------\n    function cellClick( n )\n    {\n       // console.log(\"CLICKED, HILITES ARE \", highlights );\n       if(highlights[n] === 1 )\n            props.pieceMovedTo(n);\n       setGameCells( [...cells] ); //MSK : Trick to trigg react render for arrays\n       \n    }\n//----------------------------------------\n    selected = props.board.indexOf( props.activePiece );\n    highlights = gameEngine.getPossibleMoves(\"TEST\", selected , 5); //TODO: first and 3rd parameters are important just for TRADE mode\n\n//----------------------------------------\n    return(\n        <div className=\"gameboard\">\n            <div className=\"cell-container\"  >\n                {gameCells}\n            </div>\n        </div>\n    );\n};\n\n","/home/msamia/code/FlowFive/src/utils/gameEngine.js",["196"]," const NEIGHBOR = [ [ 1,4,5 ] ,\n                    [0,2,4,5,6],\n                    [1,3,5,6,7],\n                    [2,6,7],\n                    [0,1,5,8,9],\n                    [0,1,2,4,6,8,9,10],\n                    [1,2,3,5,7,9,10,11],\n                    [2,3,6,10,11],\n                    [4,5,9,12,13],\n                    [4,5,6,8,10,12,13,14],\n                    [5,6,7,9,11,13,14,15],\n                    [6,7,10,14,15],\n                    [8,9,13],\n                    [8,9,10,12,14],\n                    [9,10,11,13,15],\n                    [10,11,14],\n                    ];\n\n const WINSITS = [  [0,1,4,5],\n                    [1,2,5,6],\n                    [2,3,6,7],\n                    [4,5,8,9],\n                    [5,6,9,10],\n                    [6,7,10,11],\n                    [8,9,12,13],\n                    [9,10,13,14],\n                    [10,11,14,15],\n//h lines\n                    [0,1,2,3],\n                    [4,5,6,7],\n                    [8,9,10,11],\n                    [12,13,14,15],\n// v lines\n                    [0,4,8,12],\n                    [1,5,9,13],\n                    [2,6,10,14],\n                    [3,7,11,15],\n// axes\n                    [0,5,10,15],\n                    [3,6,9,12],\n                ];\n\nlet playground = [  1, 0, 0, 0, \n                    0, 5, 0, 3,\n                    0, 2, 4, 0,\n                    0, 0, 0, 0 ]; //TODO DEBUG TEST\nlet activePiece = 1;\n//-----------------------------------------\nlet globalTimeFlag = false;\n\n setInterval(() => {\n   globalTimeFlag = ! globalTimeFlag;\n }, 250);\n\n//-----------------------------------------\n function getTimeFlag()\n {\n     return globalTimeFlag;\n }\n//-----------------------------------------\nfunction getPossibleMoves( mode, cell, pieceNo )\n{\n    let result = Array(16).fill(0);\n    let cells = [];\n    let neighbors = NEIGHBOR[ cell ]\n\n    for( let i=0; i <  neighbors.length; i++ )\n    {\n        if(playground[neighbors[i]] === 0 )\n            cells.push(neighbors[i]);\n        // if (mode ===\"TRADE\")\n        // {\n        //     if( Math.abs( pieceNo - playground[ neighbors[i]]) >1 ) //TODO: solve the logic for TRADE mode\n        // } \n    }\n        for( let i=0; i !== cells.length; i++ )\n            result[ cells[i] ] = 1;\n        return result;\n}\n//---------------------- interesting from my old embded C code\n/*\nbyte chareCheckPossibleMove ()         \n{\n\tbyte var1 = sysCurrentKey - ChareSelectIndex;\n\tbyte var2 = var1 * ( -1 ) ;\n\t\n\tif ( checkCell ( sysCurrentKey ) != Off )\n\t\treturn false;\n\tif( ( var1 ) != 5 )\n\t\tif( ( var2  ) != 5 )\n\t\t\t\tif( ( var1 ) != 4 )\n\t\t\t\t\tif( ( var2  ) != 4 )\n\t\t\t\t\t\tif( ( var1 ) != 3 )\n\t\t\t\t\t\t\tif( ( var2  ) != 3 )\n\t\t\t\t\t\t\t\tif( ( var1 ) != 1 )\n\t\t\t\t\t\t\t\t\tif( ( var2  ) != 1 )\n\t\t\t\t\t\t\t\t\t\treturn false;\n\treturn true;      \n}\n*/\n//-----------------------------------------\nfunction getPlayground()\n{\n    return playground;\n}\n\n//-----------------------------------------\nfunction getCellOf( pieceNo )\n{\n\n    return playground.indexOf( pieceNo );\n}\n\n//-----------------------------------------\nfunction putPiece( cell, pieceNo )\n{\n    playground[ cell ] = pieceNo;\n}\n\n//-----------------------------------------\nfunction emptyCell( cell )\n{\n    playground[ cell ] = 0;\n}\n\n//-----------------------------------------\nfunction getShuffledBoard()\n{\n    playground = Array(16).fill(0);\n    for( let i=1; i < 6; i++ )\n    {\n        let rnd = 0;\n        do{\n            rnd = Math.floor(Math.random() * 16);\n        }while( playground[ rnd ] !== 0 );\n        playground[rnd] = i;\n    }\n    console.log(\"!!!! SHUFFLE !!!!\");\n    activePiece = 1; // 1 reset game\n    return playground;\n}\n//-----------------------------------------\nfunction matchAtLeast( cells )\n{\n  for( let cell of cells )\n  {\n      if( playground[cell] === 0 )\n        return false;\n  }\n  return true;\n}\n//-----------------------------------------\nfunction checkWin()\n{ //TODO IMPORTANT cell 0 problem in win detecting\n    for( const pair of WINSITS ) \n    {\n        if( matchAtLeast(pair))\n            return pair;\n    }\n    return [];\n}\n//-----------------------------------------\nfunction getActivePiece()\n{\n    return activePiece;\n}\n\n//----------------------------------------\n// usafe function: should be called after checking\n// validation of move\n// this function swaps position of active cell and given cell,\n// update active piece number and return new playground\n//---------------------------------------\nfunction makeMove( cellNo )\n{\n\n    let activeCell = playground.indexOf(activePiece);\n\n    // swap pieces of activeCell and cellNo\n   // [playground[activeCell], playground[cellNo]] = [playground[cellNo], playground[activeCell]];\n    let temp = playground[ cellNo ];\n    playground[ cellNo ] = playground[ activeCell ];\n    playground[ activeCell ] = temp;\n\n    // increase activePece\n    activePiece = activePiece === 5? 1 : activePiece+1 ;\n\n    // return new playground\n    return playground;\n}\n//-----------------------------------------\nexport default {\n    getPossibleMoves, // returns an array of cell numbers\n    getPlayground,// get whole playground array\n    getCellOf,//getCellOf( pieceNo )\n    putPiece, //putPiece( cell, pieceNo )\n    emptyCell,\n    getShuffledBoard,// shuffle playground and set activePiece to 1\n    getTimeFlag,\n    checkWin, // return array of four or false\n    getActivePiece,\n    makeMove,\n}   ;                 ",{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":21,"column":5,"nodeType":"203","endLine":21,"endColumn":14,"suggestions":"207"},{"ruleId":"201","severity":1,"message":"208","line":2,"column":22,"nodeType":"203","messageId":"204","endLine":2,"endColumn":26},{"ruleId":"201","severity":1,"message":"209","line":10,"column":25,"nodeType":"203","messageId":"204","endLine":10,"endColumn":37},{"ruleId":"210","severity":1,"message":"211","line":62,"column":1,"nodeType":"212","endLine":68,"endColumn":3},{"ruleId":"210","severity":1,"message":"211","line":33,"column":3,"nodeType":"212","endLine":38,"endColumn":5},{"ruleId":"201","severity":1,"message":"213","line":29,"column":19,"nodeType":"203","messageId":"204","endLine":29,"endColumn":27},{"ruleId":"197","replacedBy":"214"},{"ruleId":"199","replacedBy":"215"},{"ruleId":"201","severity":1,"message":"216","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":17},{"ruleId":"201","severity":1,"message":"217","line":16,"column":12,"nodeType":"203","messageId":"204","endLine":16,"endColumn":23},{"ruleId":"201","severity":1,"message":"218","line":17,"column":12,"nodeType":"203","messageId":"204","endLine":17,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":24,"column":5,"nodeType":"203","endLine":24,"endColumn":14,"suggestions":"219"},{"ruleId":"205","severity":1,"message":"220","line":35,"column":4,"nodeType":"221","endLine":35,"endColumn":6,"suggestions":"222"},{"ruleId":"205","severity":1,"message":"223","line":21,"column":17,"nodeType":"224","endLine":21,"endColumn":18},{"ruleId":"201","severity":1,"message":"225","line":25,"column":10,"nodeType":"203","messageId":"204","endLine":25,"endColumn":17},{"ruleId":"201","severity":1,"message":"226","line":47,"column":10,"nodeType":"203","messageId":"204","endLine":47,"endColumn":15},{"ruleId":"205","severity":1,"message":"227","line":28,"column":8,"nodeType":"221","endLine":28,"endColumn":21,"suggestions":"228"},{"ruleId":"210","severity":1,"message":"211","line":192,"column":1,"nodeType":"212","endLine":203,"endColumn":6},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setValidForm'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["231"],"'Link' is defined but never used.","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setUser2' is assigned a value but never used.",["229"],["230"],"'RightHome' is defined but never used.","'invalidForm' is assigned a value but never used.","'error' is assigned a value but never used.",["232"],"React Hook useEffect has missing dependencies: 'TSTEP', 'helper', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["233"],"Assignments to the 'index' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'shuffle' is defined but never used.","'close' is defined but never used.","React Hook useEffect has missing dependencies: 'cells' and 'makeCells'. Either include them or remove the dependency array.",["234"],"no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Add dependencies array: []",{"range":"242","text":"243"},{"range":"244","text":"243"},"Update the dependencies array to be: [TSTEP, helper, props]",{"range":"245","text":"246"},"Update the dependencies array to be: [cells, makeCells, props.board]",{"range":"247","text":"248"},[764,764],", []",[725,725],[805,807],"[TSTEP, helper, props]",[711,724],"[cells, makeCells, props.board]"]